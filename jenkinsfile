pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: docker
            image: docker:24.0-cli
            command: ["sleep", "infinity"]
            volumeMounts:
              - name: docker-sock
                mountPath: /var/run/docker.sock
          volumes:
            - name: docker-sock
              hostPath:
                path: /var/run/docker.sock
      '''
    }
  }

  stages {
    stage('Clone repository') {
      steps {
        checkout scm
      }
    }

    stage('Build Docker image') {
      steps {
        sh 'docker build -t localhost:4000/flask_hello:$BUILD_NUMBER .'
        sh 'docker push localhost:4000/flask_hello:$BUILD_NUMBER'
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        sh 'kubectl apply -f ./kubernetes/deployment.yaml'
        sh 'kubectl apply -f ./kubernetes/service.yaml'
      }
    }
  }

  triggers {
    pollSCM('* * * * *') // VÃ©rifie les changements git toutes les minutes
  }
}
