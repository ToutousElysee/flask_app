pipeline {
  agent {
    kubernetes {
      label 'jenkins-agent-flask'
      yaml """
            apiVersion: v1
            kind: Pod
            spec:
                containers:
                    - name: python
                      image: python:3.10
                      command:
                        - cat
                      tty: true
                    - name: docker
                      image: docker:latest
                      command:
                        - cat
                      tty: true
                      volumeMounts:
                        - name: docker-sock
                          mountPath: /var/run/docker.sock
                    - name: kubectl
                      image: lachlanevenson/k8s-kubectl:latest
                      command:
                        - cat
                      tty: true
                volumes:
                    - name: docker-sock
                      hostPath:
                        path: /var/run/docker.sock
        """
    }
  }
  stages {
    stage('Clone repository') {
      steps {
        checkout scm
      }
    }

  stage('Install Python deps') {
   steps {
    container('python') {
      sh 'pip install -r requirements.txt'
     }
   }
  }

    stage('Run unit tests') {
      steps {
        container('python') {
            sh 'python test.py --verbose'
        }
      }
    }

    stage('Build Docker image') {
        steps {
            container('docker') {
                sh 'docker build -t 192.168.49.2:31155/flask_hello:$BUILD_NUMBER .'
                sh 'docker push 192.168.49.2:31155/flask_hello:$BUILD_NUMBER'
            }
        }
    }

    stage('Deploy to Kubernetes') {
        steps {
            container('kubectl') { 
                sh 'kubectl apply -f kubernetes/deployment.yaml'
                sh 'kubectl apply -f kubernetes/service.yaml'
            }
        }
    }
  }

  triggers {
    pollSCM('* * * * *') // VÃ©rifie les changements git toutes les minutes
  }
}
